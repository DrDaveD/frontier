$Id$

3.19 2009/07/14 (dwd)
    Changes for this release primarily written by David Front.
    - Support queries on multiple tables at once when tracking
      modification times.  This is needed in order for ATLAS to use
      Frontier.  When multiple tables are in a query, the timestamps
      on all the tables are looked up in a single database query and
      the most recent timestamp is cached.
    - Add new config.properties option 'VerbosityLevel'.  When set to
      2 or higher, add source file name and line number to each log
      file line.  When set to 4 or higher, add many debug messages.

3.18 2009/05/21 (dwd)
    - If there's an exception when releaseing the database connection, force
      the servlet to restart by touching WEB-INF/classes/config.properties.
      That's quite ugly, but I couldn't think of a better way to do it.  We
      saw a case where this happened and it ended up hanging the servlet and
      eventually the whole tomcat, so it is important to take of this.
      NOTE: if installed by root but run under a different user id, as
      is often the case when it is installed by rpm, this approach will
      not work!

3.17 2009/02/26 (dwd)
    - Add new configuration variable LastModifiedTableName that
      defines the name of the single table where modification times
      are kept for the whole database, rather than reading them
      from a LAST_MODIFIED_TIMES table in each account.  This is
      now required if ValidateLastModifiedSeconds is set.

3.16 2008/12/19 (dwd)
    - Log 'modified at time' also when the modification time was
      cached
    - Log 'using cached last-modified time of' the account.table
      when a cached modification time was found

3.15 2008/12/17 (dwd)
    - Distinguish in the log when an item has been modified after an
      if-modified-since by noting it as 'modified at time'.
    - When the X-Frontier-Id header is missing, still put in the
      initial log entry as much as is known so we can find out where
      the request is coming from.

3.14 2008/12/04 (dwd)
    - Avoid accumulating threads indefinitely when a database is down,
      by maintaining a lock for getting connections to the database and
      raising an exception immediately if the 5-minute keepalive
      thread had already given up by the time the lock is acquired.
      Previously all the threads would in turn wait 6+ minutes to try
      to open a socket to the database server and would tie up so many
      resources that they began to interfere with connections to other
      databases.
    - Avoid a couple null pointer exceptions that happened when
      required pieces were missing from a request.  Instead, raise
      more helpful exceptions for "no query string" and "no
      X-Frontier-ID".
    - Also avoid a null pointer exception leading to a "MUST NEVER
      HAPPEN HERE" internal error when there's no stack trace
      available in an exception.
    - Remove an extraneous blank in exception log entries that
      sometimes made the log appear as if it had an extra blank line.

3.13 2008/11/05 (dwd)
    - Make sure that a '?' bind variable substitution exists in query
      before looking for colons, because colon is occasionally used in
      queries as part of a table value.

3.12 2008/11/04 (dwd)
    - Add new configuration variable ValidateLastModifiedSeconds which
      defines the number of seconds between querying for modification
      times in a LAST_MODIFIED_TIMES table in the same account as
      each query.  The modified time of each table is cached
      internally for that number of seconds.  The time is used to send
      a Last-Modified header.  Squid in turn uses that value once
      the item expires to send an If-Modified-Since header.  When
      that is received, if the time has not changed send back
      an http '304 NOT MODIFIED' response.  This all combines to
      allow much more frequent object expirations without overloading
      the frontier infrastructure, because most times very little
      data is transferred, only the query and NOT MODIFIED.  This
      requires that every account loaded with this option have
      a LAST_MODIFIED_TIMES table kept up to date.  One way is
      provided to do this in Oracle, using a PL/SQL script called
      setup_modtimes.sql.
    - Use "Cache-Control: max-age" instead of "Expires" headers in
      the response.  Squid handles both and the latter are more
      difficult to calculate and manage.
    - Support bind variables in queries, with a question mark where
      each variable is to be inserted.  The values for the variables
      must be appended to the query, separated by colons (:).  This
      helps performance a bit at least on Oracle, because it is able
      to cache the parsed value of the query and re-use it rather than
      caching many similar queries.
    - Handle global errors more robustly, so they should always be 
      able to be parsed by the client.  Previously some kinds of
      errors would result in invalid xml code in the response.
    - Give more debug information in the log if the command parser
      sees a premature end of command.

3.11 2008/04/14 (dwd)
    - Set the maximum keepalive time (which includes the time it takes
      to allocate a connection to the DB) to 5 minutes

3.10 2008/02/28 (dwd)
    - Set the expiration time for exception messages to 5 minutes.

3.9 2007/10/24 (dwd)
    - When a blob is null, send a null indication rather than empty.
      This is the more correct way to handle null blobs than what was
      put in in release 3.5.

3.8 2007/05/24 (dwd)
    - Back out change from 3.7 because that ends up eliminating the
      Content-Length header from even small responses, causing squid
      to drop the connection after every query instead of keeping
      persistent connections.  Instead, we will rely on squid 2.6's
      "collapsed_forwarding" feature to maximize sharing.  Also fix an
      inadvertent too-early sending of the response header that was
      put in in version 3.5.  Add a log message about the response
      being precommitted whenever the header is committed early,
      resulting in the removal of Content-Length.  This now happens
      only when responses take up more than the default 8K buffer in
      the ServletOutputStream.

3.7 2007/05/01 (dwd)
    - Send response headers as soon as possible to maximize the
      sharing that squid does.

3.6 2007/04/05 (dwd)
    - Get the transaction id (with a -ka suffix) into log messages
      from the keepalive thread

3.5 2007/03/22 (dwd)
    - Cleaned up log messages so those that occur regularly all will
      show timestamp and thread id
    - Greatly improved performance for blobs, for small rows, and for
      zipping
    - Replaced Base64 encode/decode implementation with much simpler/
      cleaner version
    - Eliminate null pointer exception on null blobs
    - Renamed CacheExpireSeconds and CacheExpireHourOfDay to 
      LongCacheExpireSeconds and LongExpireHourOfDay.  Added two new
      parameters ShortCacheExpireSeconds and ShortCacheExpireHourOfDay
      which are the same except apply to all queries that have
      "&ttl=short" (ttl stands for time-to-live).  The default on
      ShortCacheExpireSeconds is 0.
    - Catch all Throwables, not just Exceptions, so that Errors are
      also included and debugged
    - When an Exception or Error occurs pass the function, source file
      number, and line number to the application in addition to the
      name of the throwable
    - The "stop" log message now includes the entire transaction, so
      the number of active threads and the elapsed time are more
      meaningful

3.4 2006/10/26 (dwd)
    - Added support for oracle BLOB (Binary Large OBject) types
    - Added two optional parameters to WEB-INF/classes/config.properties:
	CacheExpireSeconds - number of seconds after queries in which
	  the caching of the query should expire.  Default is 7 days of
	  seconds, 604800.
	CacheExpireHourOfDay - the hour of the day at which all
	  query caching should expire, if less than CacheExpireSeconds.
	  For example, if it is set to "23", all items will expire at
	  11:00 p.m. in the local time of the server.  Default is
	  to use CacheExpireSeconds instead.

3.3 2006/09/05 (dwd)
    - Fixed bug where the keepalive message task wasn't shut down if
      the database connection failed
    - Added a refinement to Luis Ramos' patch of 3.1: don't add the
      parenthesized precision after the NUMBER data type if the
      precision is zero

3.2 2006/07/26 (dwd)
    - Added sending a keepalive message to the client every 5 seconds
      while waiting to acquire a database connection, to avoid client
      timeouts under heavy load
    - Added sending the servlet version to the catalina log and the
      client
    - Reduced non-useful debugging output to the catalina log and
      improved some others

3.1 2006/06/07 (dwd)
    - Added feature to zip the retrieved payload using gzip levels 0-9
      where level 0 is no zipping, level 1 is fastest but least
      compressed, and level 9 is slowest but most compressed
    - Added precision in parentheses to the NUMBER data type.  Requested
      by Luis Ramos of CERN and patch supplied by him
    - Cleaned up some exception message typos

3.0 and earlier releases did not have release notes
